// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// O modelo User já existe, vamos apenas garantir que o campo 'role' esteja lá
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  role          String?   @default("CLIENT") // Role do usuário: CLIENT ou ADMIN
  accounts      Account[]
  sessions      Session[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// =======================================================
// NOVOS MODELOS para o seu catálogo
// =======================================================

model Menu {
  id        Int      @id @default(autoincrement())
  logoUrl   String
  links     Json
}

// Modelo para as coleções (Vestidos Azuis, Vestidos Pretos, etc.)
model Collection {
  id          String @id @default(cuid())
  name        String
  subtitle    String?
  description String?
  bgcolor     String?
  buttonText  String?
  dresses     Dress[] // Relacionamento com os vestidos
}

// Modelo para os vestidos individuais
model Dress {
  id            String @id @default(cuid())
  img           String
  productMark   String
  productModel  String
  cor           String

  // Relacionamento com a coleção a qual o vestido pertence
  collection    Collection @relation(fields: [collectionId], references: [id])
  collectionId  String
}